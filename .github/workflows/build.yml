# Basic workflow
name: build

# Use more columns for terminal output
env:
  COLUMNS: 120
  PYTHONIOENCODING: utf8

# Controls when the action will run
# Workflow begins with push or PR events
# Focuses on the master branch only
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Create one single job
# This job performs all of the necessary checks
jobs:
  build:
    # Use the latest version of Ubuntu, MacOS, and Windows
    # Use the latest and most stable version of Python
    # Important: test coverage monitoring and reporting
    # through a badge and the GitHub Actions job summary
    # only takes place with the Linux operating system.
    # Important: the MacOS and Windows operating systems
    # have test coverage calculation take place but they
    # do not report the test coverage beyond its display
    # inside of the GitHub Actions panel for that job.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
        include:
          - os: macos-latest
            python-version: "3.11"
          - os: windows-latest
            python-version: "3.11"
    # Define the workflow steps
    steps:
    # Checkout the code of the repository
        - name: Check out Repository Code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        # Run the mdl linting tool
        # Refers to .mdlrc file in repository
        - name: Run Markdown Linting
          if: matrix.os == 'ubuntu-latest'
          uses: actionshub/markdownlint@main
        # Setup Python for the current language version
        - name: Setup Python ${{ matrix.python-version }}
          if: always()
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        # Install pip
        - name: Install Pip
          if: always()
          run: |
            python -m pip install --upgrade pip
        # Install poetry
        - name: Install Poetry
          if: always()
          uses: abatilo/actions-poetry@v2.0.0
          with:
            poetry-version: 1.4.0
        # Install dependencies
        - name: Install dependencies
          if: always()
          run: |
            poetry install
        # Run the linters
        - name: Run Linters
          if: always()
          run: |
            poetry run task lint
        # Run the program
        - name: Run program
          if: always()
          run: |
            poetry run cellveyor --spreadsheet-directory $PWD/spreadsheets/ --spreadsheet-file $PWD/spreadsheets/fake_spreadsheet.xlsx/ --sheet-name Main --key-attribute "Student GitHub" --key-value "gkapfham" --column-regexp '^(Summary Grade|Final Grade) .*$' --feedback-regexp "Summary Grade 1 - Feedback" --feedback-file $PWD/spreadsheets/feedback.yml/ 
        # Run the tests
        - name: Run Tests
          if: always()
          run: |
            poetry run task test
